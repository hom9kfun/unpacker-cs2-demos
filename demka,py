import os
import sys
import shutil
import zipfile
import gzip
import time
from colorama import Fore, init

init(autoreset=True)

PIG_ART = r'''
       (\____/)
       / @__@  \ 
      (  (oo)   )  
       `-.~~.-'     
        /    \      
      @/      \_    
     (/ /    \  \)  
      WW`----'WW     
'''

BANNER = f'''
{Fore.CYAN}  +---------------------------------------+
  |               SNG SVINOTA             |
  |                                       |
  |   –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ –∏ –ø–µ—Ä–µ–Ω–æ—Å–∞    |
  |            –¥–µ–º–æ–∫ –ö–°2                  |
  |           Made by Director            |
  |           Telegram: @nevadalzt        |
  +---------------------------------------+
'''

def show_banner():
    print(Fore.GREEN + PIG_ART)
    width = 40
    for line in BANNER.split('\n'):
        print(line)

def read_config(config_path):
    if os.path.exists(config_path):
        with open(config_path, 'r') as f:
            return f.readline().strip()
    return None

def save_config(config_path, dest_path):
    with open(config_path, 'w') as f:
        f.write(dest_path)
    print(f"{Fore.YELLOW}üìÅ –ü—É—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {dest_path}")

def ask_for_path():
    return input(f"{Fore.YELLOW}üìÇ –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤: ").strip()

def rename_file(file_path):
    rename_choice = input(f"{Fore.YELLOW}üîÑ –•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Ñ–∞–π–ª? (Y/N): ").strip().lower()
    if rename_choice == 'y':
        new_name = input("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ (–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è): ").strip()
        new_file_path = os.path.join(os.path.dirname(file_path), new_name + os.path.splitext(file_path)[1])
        os.rename(file_path, new_file_path)
        print(f"{Fore.GREEN}‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –≤ {new_file_path}")
        return new_file_path
    return file_path

def extract_archive(archive_path, dest_path):
    print(f"{Fore.YELLOW}üì¶ –ù–∞—á–∏–Ω–∞—é —Ä–∞—Å–ø–∞–∫–æ–≤–∫—É –∞—Ä—Ö–∏–≤–∞...")
    if zipfile.is_zipfile(archive_path):
        with zipfile.ZipFile(archive_path, 'r') as zip_ref:
            zip_ref.extractall(dest_path)
            print(f"{Fore.GREEN}‚úÖ –ê—Ä—Ö–∏–≤ —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω!")
    else:
        print(f"{Fore.RED}‚ùå –§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞—Ä—Ö–∏–≤–æ–º!")

def extract_gz(gz_path, dest_path):
    base_name = os.path.basename(gz_path).replace('.gz', '')
    extracted_file_path = os.path.join(dest_path, base_name)
    print(f"{Fore.YELLOW}üì¶ –ù–∞—á–∏–Ω–∞—é —Ä–∞—Å–ø–∞–∫–æ–≤–∫—É —Å–∂–∞—Ç–æ–≥–æ —Ñ–∞–π–ª–∞...")
    with gzip.open(gz_path, 'rb') as f_in:
        with open(extracted_file_path, 'wb') as f_out:
            shutil.copyfileobj(f_in, f_out)
    print(f"{Fore.GREEN}‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω!")
    return extracted_file_path

def process_file(file_path, config_path='config.txt'):
    show_banner()
    
    dest_path = read_config(config_path)
    
    if not dest_path:
        dest_path = ask_for_path()
        save_config(config_path, dest_path)
    
    if not os.path.exists(dest_path):
        os.makedirs(dest_path)
    
    if file_path.endswith('.zip'):
        extract_archive(file_path, dest_path)
        moved_file = os.path.basename(file_path)
    elif file_path.endswith('.gz'):
        extracted_file = extract_gz(file_path, dest_path)
        moved_file = os.path.basename(extracted_file)
        if extracted_file.endswith('.dem'):
            print(f"{Fore.YELLOW}üìÇ –ü–µ—Ä–µ–Ω–æ—à—É —Ñ–∞–π–ª...")
            time.sleep(1)
            shutil.move(extracted_file, os.path.join(dest_path, moved_file))
            print(f"{Fore.GREEN}‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω!")
        else:
            print(f"{Fore.RED}‚ùå –§–∞–π–ª —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω, –Ω–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
            return
    elif file_path.endswith('.dem'):
        print(f"{Fore.YELLOW}üìÇ –ü–µ—Ä–µ–Ω–æ—à—É —Ñ–∞–π–ª...")
        time.sleep(1)
        shutil.move(file_path, os.path.join(dest_path, os.path.basename(file_path)))
        moved_file = os.path.basename(file_path)
        print(f"{Fore.GREEN}‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω!")
    else:
        print(f"{Fore.RED}‚ùå –§–∞–π–ª –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è!")
        return

    rename_file(os.path.join(dest_path, moved_file))

    print("\n‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üê∑")

if __name__ == "__main__":
    if len(sys.argv) > 1:
        file_path = sys.argv[1]
        
        if os.path.exists(file_path):
            process_file(file_path)
        else:
            print(f"{Fore.RED}‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    else:
        print(f"{Fore.RED}‚ùå –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª –Ω–∞ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
